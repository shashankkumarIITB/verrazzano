{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "22654"
    },
    "items": [
        {
            "metadata": {
                "name": "prometheus-node-exporter",
                "namespace": "verrazzano-monitoring",
                "uid": "8b71b1b8-983b-43ae-a208-6f2f19c4ab7f",
                "resourceVersion": "7255",
                "generation": 1,
                "creationTimestamp": "2022-05-26T22:09:27Z",
                "labels": {
                    "app": "prometheus-node-exporter",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "prometheus-node-exporter-3.1.0",
                    "heritage": "Helm",
                    "release": "prometheus-node-exporter"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "field.cattle.io/publicEndpoints": "[{\"nodeName\":\":10.0.116.227\",\"addresses\":[\"10.0.116.227\"],\"port\":9400,\"protocol\":\"TCP\",\"podName\":\"verrazzano-monitoring:prometheus-node-exporter-jlk7z\",\"allNodes\":false},{\"nodeName\":\":10.0.94.45\",\"addresses\":[\"10.0.94.45\"],\"port\":9400,\"protocol\":\"TCP\",\"podName\":\"verrazzano-monitoring:prometheus-node-exporter-jx24q\",\"allNodes\":false}]",
                    "meta.helm.sh/release-name": "prometheus-node-exporter",
                    "meta.helm.sh/release-namespace": "verrazzano-monitoring"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "prometheus-node-exporter",
                        "release": "prometheus-node-exporter"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "prometheus-node-exporter",
                            "chart": "prometheus-node-exporter-3.1.0",
                            "heritage": "Helm",
                            "release": "prometheus-node-exporter"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "proc",
                                "hostPath": {
                                    "path": "/proc",
                                    "type": ""
                                }
                            },
                            {
                                "name": "sys",
                                "hostPath": {
                                    "path": "/sys",
                                    "type": ""
                                }
                            },
                            {
                                "name": "root",
                                "hostPath": {
                                    "path": "/",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "node-exporter",
                                "image": "ghcr.io/verrazzano/node-exporter:v1.3.1",
                                "args": [
                                    "--path.procfs=/host/proc",
                                    "--path.sysfs=/host/sys",
                                    "--path.rootfs=/host/root",
                                    "--web.listen-address=[$(HOST_IP)]:9400"
                                ],
                                "ports": [
                                    {
                                        "name": "metrics",
                                        "hostPort": 9400,
                                        "containerPort": 9400,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "HOST_IP",
                                        "value": "0.0.0.0"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "proc",
                                        "readOnly": true,
                                        "mountPath": "/host/proc"
                                    },
                                    {
                                        "name": "sys",
                                        "readOnly": true,
                                        "mountPath": "/host/sys"
                                    },
                                    {
                                        "name": "root",
                                        "readOnly": true,
                                        "mountPath": "/host/root",
                                        "mountPropagation": "HostToContainer"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9400,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9400,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "prometheus-node-exporter",
                        "serviceAccount": "prometheus-node-exporter",
                        "automountServiceAccountToken": false,
                        "hostNetwork": true,
                        "hostPID": true,
                        "securityContext": {
                            "runAsUser": 65534,
                            "runAsGroup": 65534,
                            "runAsNonRoot": true,
                            "fsGroup": 65534
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        }
    ]
}
